<Window x:Class="Restorator.Desktop.Views.Windows.RestaurantTemplateGeneratorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:Restorator.Desktop.Converters"
        xmlns:models="clr-namespace:Restorator.Desktop.Models"
        xmlns:viewmodels="clr-namespace:Restorator.Desktop.ViewModels"
        xmlns:windows="clr-namespace:Restorator.Desktop.Views.Windows"
        d:DataContext="{d:DesignInstance Type=viewmodels:RestaurantTemplateGeneratorViewModel}"
        mc:Ignorable="d"
        MinWidth="750"
        d:DesignHeight="1526.82" d:DesignWidth="1212.66"
        ResizeMode="NoResize" WindowState="Maximized" Name="dialog">
    <Window.Resources>
        <converters:DoubleToAngleConverter x:Key="doubleAngeConverter"/>
    </Window.Resources>

    <DockPanel>
        <Viewbox HorizontalAlignment="Left">
            <Grid>
                <Image Source="{Binding Template.Content}"/>

                <ItemsControl ItemsSource="{Binding Tables}" IsTabStop="False">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Margin="10,0">
                                <Canvas.Background>
                                    <ImageBrush Stretch="Uniform"/>
                                </Canvas.Background>
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:TableModel}">
                            <Button Width="{Binding Width}" Height="{Binding Height}"
                                    Style="{StaticResource TableButtonStyle}" 
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type windows:RestaurantTemplateGeneratorWindow}}, Path=DataContext.ChangeSelectedTableCommand}"
                                    CommandParameter="{Binding}"
                                    IsTabStop="False">
                                <Button.LayoutTransform>
                                    <RotateTransform CenterX="0" CenterY="0" Angle="{Binding Rotation, Converter={StaticResource doubleAngeConverter}}"/>
                                </Button.LayoutTransform>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                    <ItemsControl.Resources>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding X}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y}" />
                        </Style>
                    </ItemsControl.Resources>
                </ItemsControl>
            </Grid>
        </Viewbox>

        <StackPanel Margin="20,0" HorizontalAlignment="Stretch" MinWidth="200">
            <TextBlock Text="{Binding  SelectedTable.X, StringFormat=X: {0}}"/>
            <Slider IsTabStop="False" Minimum="0" Maximum="1060" Value="{Binding SelectedTable.X, Mode=TwoWay}"/>

            <TextBlock Text="{Binding  SelectedTable.Y, StringFormat=Y: {0}}"/>
            <Slider IsTabStop="False"  Minimum="0" Maximum="1400" Value="{Binding SelectedTable.Y, Mode=TwoWay}"/>

            <TextBlock Text="{Binding  SelectedTable.Rotation, StringFormat=Поворот: {0}}"/>
            <Slider IsTabStop="False" Minimum="0"  Maximum="90" TickFrequency="45" IsSnapToTickEnabled="True" TickPlacement="BottomRight" 
                    Value="{Binding SelectedTable.Rotation, Mode=TwoWay}"/>

            <DockPanel>
                <ui:Button IsTabStop="False" Appearance="Primary" Content="Добавить стол" HorizontalAlignment="Center" Margin="0,20" Command="{Binding AddNewTableCommand}"/>
                <ui:Button IsTabStop="False" Appearance="Primary" Content="Удалить выбранный стол" HorizontalAlignment="Center" Margin="0,20" Command="{Binding RemoveTableCommand}"/>
            </DockPanel>

            <ui:Button Appearance="Danger" Foreground="White" Content="Удалить все столы" 
                       Command="{Binding ClearSchemeCommand}"/>

            <ui:Button Appearance="Success" Foreground="White" Content="Сохранить шаблон" 
                       Margin="0,25"
                       Command="{Binding SaveTemplateCommand}"/>
        </StackPanel>

        <StackPanel Margin="20,0">
            <ui:TextBlock FontTypography="Title" Text="Шаблон стола"/>

            <ItemsControl ItemsSource="{Binding TableTemplates}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:TableModel}">
                        <ui:Button Appearance="Info"
                                   Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type windows:RestaurantTemplateGeneratorWindow}},
                            Path=DataContext.ChangeSelectedTableTemplateCommand}"
                                   CommandParameter="{Binding }">
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}x{1}">
                                        <Binding Path="Width"/>
                                        <Binding Path="Height"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </ui:Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
    </DockPanel>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitializeCommand}"/>
        </i:EventTrigger>

        <i:PropertyChangedTrigger Binding="{Binding DialogResult}">
            <i:ChangePropertyAction PropertyName="DialogResult" TargetName="dialog" Value="{Binding DialogResult}"/>
        </i:PropertyChangedTrigger>
    </i:Interaction.Triggers>
</Window>
